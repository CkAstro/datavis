.display {
   width: var(--display-width);
   background: var(--display-background);
   padding: 1rem;
   min-width: 350px;
   display: flex;
   flex-direction: column;
   min-height: 400px;
   box-sizing: border-box;
}

@media only screen and (min-width: 1700px) {
   .display {
      min-width: 650px;
   }
}

@media only screen and (min-width: 3400px) {
   .display {
      min-width: 1300px;
   }
}

@media only screen and (max-width: 700px) {
   .display {
      width: 100vw;
      height: var(--display-height);
      min-height: 250px;
      padding-bottom: 0;
   }
}

/* ----- action bar ----- */
.display__actionbar {
   display: flex;
   padding-bottom: 1rem;
   flex-wrap: wrap;
   gap: 0.25rem;
}

.display__actionbar > div {
   display: flex;
   flex-wrap: wrap;
   gap: 0.25rem;
}

/* ----- canvas container ----- */
.display__container {
   flex: 1;
   width: 100%;
   position: relative;
}

.display__container canvas:not(.display__colorbar) {
   position: absolute;
   top: 0;
   left: 0;
   right: 0;
   bottom: 0;
}

.display__colorbar {
   position: absolute;
   right: 0;
   bottom: 0;
   width: 75px;
   height: 200px;
}

/* ----- scene controller ----- */
.sceneOptions {
   display: flex;
   justify-content: space-around;
   align-items: center;
}

.sceneController {
   display: flex;
   justify-content: center;
   align-items: center;
}

.sceneController:not(.active) {
   opacity: 0.3;
}

.sceneController.hidden {
   visibility: hidden;
}

.sceneController > span {
   padding: 0 0.75rem;
   font-size: 1.5rem;
   font-weight: bold;
}

.sceneController > span.adjust {
   font-size: 2.25rem;
   transform: translate(0, -3px);
}
